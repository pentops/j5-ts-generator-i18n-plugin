// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`I18nPlugin > should write translations according to specified parameters 1`] = `
"{
  "schema": {
    "j5": {
      "auth": {
        "v1": {
          "AuthenticationMethod_External": "J5AuthV1AuthenticationMethodExternal",
          "AuthenticationMethod_JWT": "J5AuthV1AuthenticationMethodJwt",
          "AuthenticationMethod_Session": "J5AuthV1AuthenticationMethodSession"
        }
      }
    }
  }
}"
`;

exports[`I18nPlugin > should write translations according to specified parameters 2`] = `
"{
  "oneOf": {
    "O5DanteV1DeadMessageEventType": {
      "notified": "Notified",
      "rejected": "Rejected",
      "replayed": "Replayed",
      "updated": "Updated"
    }
  }
}"
`;

exports[`I18nPlugin > should write translations according to specified parameters 3`] = `
"/**
 * @generated by @pentops/jsonapi-jdef-ts-generator (Plugin: I18nPlugin) - do not edit */

import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import enCommonNs from '../../translation/translations/en/common.json';
import enDanteNs from '../../translation/translations/en/dante.json';
import enJ5Ns from '../../translation/translations/en/j5.json';
import enO5Ns from '../../translation/translations/en/o5.json';

export const i18nOpts = {
    resources: {
        en: {
            dante: enDanteNs,
            o5: enO5Ns,
            j5: enJ5Ns,
            common: enCommonNs
        }
    },
    defaultNS: undefined
} as const;

export type I18nNamespaces = keyof (typeof i18nOpts)['resources']['en'];

i18n.use(initReactI18next).init(i18nOpts)

export { i18n };
"
`;

exports[`I18nPlugin > should write translations according to specified parameters 4`] = `
"{
  "oneOf": {
    "J5AuthV1AuthenticationMethod": {
      "external": "External",
      "jwt": "JWT",
      "numericEnumValue": "Numeric Enum Value",
      "session": "Session"
    }
  }
}"
`;

exports[`I18nPlugin > should write translations according to specified parameters 5`] = `
"{
  "oneOf": {
    "O5MessagingV1TopicProblem": {
      "unhandledError": "Unhandled Error"
    }
  }
}"
`;
